
%ul#launch_tabs.subsection_tabs
  %li.tab
    %a{ :href => "#settings" }
      settings
  %li.tab
    %a{ :href => "#options" }
      options
  %li.tab
    %a{ :id => "control_tab", :href => "#control"}
      control
  %li.tab
    %a{ :id => "info_tab", :href => "#info"}
      info
#settings.tabpanel
  =@input_html
-form_for @launch do |f|
  #options.tabpanel
    .panel_in_tab
      = f.error_messages
      =f.hidden_field :subapp_id
      =f.hidden_field :settings
      %input{:type => 'hidden', :name => 'default_tab', :value => 'control'}
      .prop_row
        .label
          = f.label :name 
        .field
          = f.text_field :name, :size => 40
      .prop_row
        .label
          parent launch
        .field
          = (@launch.parent ? @launch.parent.name : '-')
      .prop_row
        .label
          launch type
        .field
          = @launch.subapp.name
          #subapp_id{:style => 'display:none'}<
            =@launch.subapp.id
    
      =f.submit "Clone", :onclick=> 'collect_and_submit();' if @launch.id
    

  #control.tabpanel
    .panel_in_tab
      .prop_row
        .label
          current state
        .field
          =@launch.state.to_s.humanize
      .prop_row
        .label
          actions
        .field
          -@launch.available_actions.each do |action|
            =f.submit action.to_s.humanize, :onclick => 'collect_and_submit()'
      
      #jobs.group
  
#info.tabpanel
  .panel_in_tab
    .prop_row
      .label
        command
      #info_command.field
      
    .prop_row
      .label
        command arguments
      #info_command_args.field
    
    #launch_files
    #launch_sequences
      
    
:javascript

  new Control.Tabs('launch_tabs', {defaultTab: '#{params[:default_tab]}' || 'first'});
  
  $('control_tab').observe('click', function(event){
    new Ajax.Request('#{url_for(:controller => :jobs, :action => :select, :params => {:orders => 'state ASC', :launch_id => @launch.id})}');
  });
  
  function collect_and_submit(){
    
    var launch_params = prepareSubmit()
    nameFromId($('partial_form'))
    var formData = $('partial_form').serialize(true)
    var cleanFormData = {}
    $H(formData).each(function(pair){
      if(!pair.key.endsWith('_prototype')){
        cleanFormData[pair.key] = pair.value
      }
    })
    formData = cleanFormData;
    var settings  = {
      form_data: formData,
      launch_params: launch_params
    }
    var serString = Object.toJSON(settings)
    $('launch_settings').value = serString
    return true
    
  }     
  
  var settings_str = $('launch_settings').value;
  
  var settings = {form_data: {}, launch_params: {}}
  try{
    if(settings_str !== undefined){
      settings = settings_str.evalJSON(true)
    }
  }
  catch(e){
    //TODO log
  }
  var partial_form = $('partial_form');
  if(partial_form.preInit){
    partial_form.preInit(settings);
  }
  nameFromId($('partial_form'))

  Form.fillForm('partial_form', settings.form_data);
  $('partial_form').init(); 
  nameFromId($('partial_form')); 
  
  function readonlyMode(){
    $('partial_form').disable();
    $('partial_form').select("a").each(function(element){
      element.onclick = "return false;"
    })
  } 
  
  if(#{!@launch.editable?}){
    readonlyMode();
  }

= render :partial => 'info_tab'  
  
   