!!!
%html{ "xml:lang" => "en", :lang => "en", :xmlns => "http://www.w3.org/1999/xhtml" }
  %head
    =render :partial => 'layouts/common_head' 


    
  %body.bp.three-col.gridportal
    #ajax_indicator{:style => 'display: none'}
      loading...
    #connection_error{:style => 'display: none'}
      Network error, please check your connection
      .click_to_hide
        X
    :javascript
    

      
      Ajax.Responders.register({ 
        onCreate: function() {
          $('ajax_indicator').show();
        },
        onException: function(requester, exception){
          //alert(exception);
          $('ajax_indicator').hide();
        },
        onComplete: function(requester, request){
          if(request.status == 0){
            $('connection_error').show()
          }
          if(true || Ajax.activeRequestCount <= 0){
            $('ajax_indicator').hide();
          }
        }
      });
      $$('.click_to_hide').each(function(x){x.observe('click', function(event){
        event.target.parentNode.hide()
      })});
      ///$('connection_error').innerHTML = 'ERROR'
      //$('connection_error').show()
    
    #container
      #header
        =link_to "", {:controller => :dashboard}, {:class => 'logo'}
        #title
          ="::Grid::PortÃ¡l"
          #login{:onmouseover => "$('logout').show()", :onmouseout => "$('logout').hide()"}
            
            -if current_user
              -unless current_user.nickname.blank?
                logged in as 
                =link_to current_user.display_name, edit_person_path(current_user)
              -else
                \?
            
            #logout{:style => 'display: none'}
              =link_to "logout", remote_logout_url
        #static_header_panel
          %a.clickable.help#help_button
        
          
      #sidebar.last
        .place_holder
        #bc.broadcast
          =# h ApplicationController.broadcast#TBD turned off
        #shortcuts
          -last_subapp_id = current_pref.get_value :last_subapp_id
          -if last_subapp_id
            -last_subapp = Subapp.find_by_id last_subapp_id
          -last_launch_id = current_pref.get_value :last_launch_id
          -if last_launch_id
            -last_launch = Launch.find_by_id last_launch_id
      
          
          
          -if last_subapp || last_launch
            .title
              Shortcuts
            .list
              -if last_subapp
                .item          
                  =link_to "New launch, as last time", new_subapp_launch_path(last_subapp)
              -if last_launch
                .item
                  =link_to "Open your last launch", launch_path(last_launch)
                .item
                  =link_to "Clone your last launch", :controller => 'launches', :action => 'clone_action', :id => last_launch_id, :method => :put
          

        
        #statistics
          .title
            Statistics
          %ul
            -ApplicationController.stats.each do |pair|
              %li
                %span.name
                  =pair[0]
                %span<
                  \:
                %span.value
                  =pair[1]
          .long_desc{:style => 'display: none'}
            The statistics updated only when certain interactions occurs. Click the NIIFI logo to see
            the current values.
          
      #content
        = render :partial => '/layouts/flash', :object => flash

        = yield
 
      #footer
        #version
          commit version:
          =@git_version
          
#main_debug.debug{:title => "DEBUG"}
-if current_user
  = (ENV['RAILS_ENV'] == 'developmentYYY') ? periodically_call_remote(:url => {:controller => 'application',  
    :action => 'pool_broadcast'}, 
    :update => {:success => 'bc' }, :frequency => 60) : ""#TBD this feature is turned off




  
:javascript


  var sessStorage = sessionStorage || {}
  
  if(sessStorage.helpIsOn === undefined){
    sessStorage.helpIsOn = 0
  }

  function checkHelp(){
    if(sessStorage.helpIsOn == 1){
      $$('.long_desc').invoke('appear', { duration: 0.5});
      $('help_button').removeClassName('help_off').addClassName('help')
      
    }
    else{
      $$('.long_desc').invoke('fade', { duration: 0.5});
      $('help_button').removeClassName('help').addClassName('help_off')
    }
  }
  
  document.observe('gp:new_panel', function(event){
    checkHelp();
  });
  
  
  window.onbeforeunload = function(event){
    //return "did you save your settings?"
  }

  document.fire("gp:new_panel")
  $('help_button').observe('click', function(){
    
    sessStorage.helpIsOn = Math.abs(+sessStorage.helpIsOn - 1)
    checkHelp();
  })
  var debug_window = window_factory($('main_debug'), 
    {'position' : [20, 300], 
    'fade' : true, 
    'resizable' : true, 
    'min-width' : 300, 
    'min-height' : 100
    });  
  //debug_window.open();
  
  function debug(str){
    $('main_debug').update(str);
  }
  
  
  

